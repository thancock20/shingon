import {Mongo} from 'meteor/mongo';
import {Class} from 'meteor/jagi:astronomy';
import {Meteor} from 'meteor/meteor';

const <%= collectionName %> = new Mongo.Collection('<%= collectionFileName %>');

const <%= className %> = Class.create({
  name: '<%= className %>',
  collection: <%= collectionName %>,
  fields: {
    _id: {
      type: String,
      immutable: true
    },
    createdAt: {
      type: Date,
      default: () => new Date(),
      immutable: true
    },
    updatedAt: {
      type: Date,
      default: () => new Date()
    }
  },
  events: {
    afterInit(e) {
      // const doc = e.currentTarget;
    },
    beforeRemove(e) {
      // const doc = e.currentTarget;
    }
  },
  helpers: {
    create(inits) {
      // this.something = inits.something;
      // this.save();
    },
    edit(updates) {
      // for (let key in updates) {
      //   if (updates.hasOwnProperty(key)) {
      //     this[key] = updates[key];
      //   }
      // }
      // this.updatedAt = new Date();
      // this.save();
    }
  }
});

if (Meteor.isServer) {
  <%= className %>.unpublished = [];
}

export default <%= className %>;
